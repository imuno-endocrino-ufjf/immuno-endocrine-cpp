name: Compile, Release and Generate Project Results

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write

env:
  VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [release, debug]

    steps:
      - uses: actions/checkout@v4

      - name: Export GitHub Actions cache environment variables
        uses: actions/github-script@v7
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Clone current vcpkg version
        run: git clone https://github.com/microsoft/vcpkg "${{ github.workspace }}/vcpkg"

      - name: Setup MSVC (Windows)
        uses: ilammy/msvc-dev-cmd@v1
        if: matrix.os == 'windows-latest'

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Create CMakeUserPresets.json
        run: |
          touch ${{ github.workspace }}/CMakeUserPresets.json
          echo '{
              "version": 2,
              "configurePresets": [
                {
                  "name": "release",
                  "inherits": "vcpkg-release",
                  "environment": {
                    "VCPKG_ROOT": "./vcpkg"
                  }
                },
                {
                  "name": "debug",
                  "inherits": "vcpkg-debug",
                  "environment": {
                    "VCPKG_ROOT": "./vcpkg"
                  }
                }
              ]
            }' > ${{ github.workspace }}/CMakeUserPresets.json
          cat ${{ github.workspace }}/CMakeUserPresets.json

      - name: Configure CMake
        run: cmake --preset=${{ matrix.build_type }}

      - name: Build
        run: cmake --build ${{ github.workspace }}/build

      - name: Rename
        run: mv ${{ github.workspace }}/build/immuno-endocrine-cpp${{ matrix.os == 'windows-latest' && '.exe' || '' }} ${{ github.workspace }}/build/immuno-endocrine-cpp-${{ matrix.os }}-${{ matrix.build_type }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}

      - name: List build output
        run: ls -R build/

      - uses: actions/upload-artifact@v4
        with:
          name: immuno-endocrine-cpp-${{ matrix.os }}-${{ matrix.build_type }}
          path: |
            ${{ github.workspace }}/build/immuno-endocrine-cpp-${{ matrix.os }}-${{ matrix.build_type }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}
            ${{ github.workspace }}/build/fmt.dll
            ${{ github.workspace }}/build/fmtd.dll

  release:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Get current date
        run: echo "current_date=$(date +%Y-%m-%dT%H%M)" >> $GITHUB_ENV

      - name: Create tag
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ env.current_date }}',
              sha: context.sha
            })

      - uses: actions/download-artifact@v4
        with:
          path: ${{ github.workspace }}/artifacts

      - name: Zip Windows release with dlls
        run: |
          zip -r ./immuno-endocrine-cpp-windows-latest-debug.zip ./artifacts/immuno-endocrine-cpp-windows-latest-debug
          zip -r ./immuno-endocrine-cpp-windows-latest-release.zip ./artifacts/immuno-endocrine-cpp-windows-latest-release

      - name: List all artifacts
        run: ls -R ${{ github.workspace }}/artifacts

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: true
          tag_name: ${{ env.current_date }}
          files: |
            ${{ github.workspace }}/artifacts/immuno-endocrine-cpp-macos-latest-debug/immuno-endocrine-cpp-macos-latest-debug
            ${{ github.workspace }}/artifacts/immuno-endocrine-cpp-macos-latest-release/immuno-endocrine-cpp-macos-latest-release
            ${{ github.workspace }}/artifacts/immuno-endocrine-cpp-ubuntu-latest-debug/immuno-endocrine-cpp-ubuntu-latest-debug
            ${{ github.workspace }}/artifacts/immuno-endocrine-cpp-ubuntu-latest-release/immuno-endocrine-cpp-ubuntu-latest-release
            ${{ github.workspace }}/immuno-endocrine-cpp-windows-latest-debug.zip
            ${{ github.workspace }}/immuno-endocrine-cpp-windows-latest-release.zip

  generate-results:
    runs-on: ${{ matrix.os }}

    needs: build

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [release, debug]

    steps:
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          name: immuno-endocrine-cpp-${{ matrix.os }}-${{ matrix.build_type }}
          path: ${{ github.workspace }}

      - name: List workspace files
        run: ls -R ${{ github.workspace }}

      - name: Install gnuplot (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt install gnuplot

      - name: Install gnuplot (macOS)
        if: matrix.os == 'macos-latest'
        continue-on-error: true # Installing from a manual source will always fail
        run: |
          wget https://raw.githubusercontent.com/Homebrew/homebrew-core/aa0fb7934a362ccc24f2c8fd19bb347eadebf16b/Formula/g/gnuplot.rb
          brew install ./gnuplot.rb

      - name: Setup MSVC (Windows)
        uses: ilammy/msvc-dev-cmd@v1
        if: matrix.os == 'windows-latest'

      - name: Install winget (Windows)
        if: matrix.os == 'windows-latest'
        uses: Cyberboss/install-winget@v1

      - name: Install gnuplot (Windows)
        if: matrix.os == 'windows-latest'
        run: winget install gnuplot --disable-interactivity --accept-source-agreements

      - name: Run binary (UNIX)
        if: matrix.os != 'windows-latest'
        run: |
          chmod +x ./immuno-endocrine-cpp-${{ matrix.os }}-${{ matrix.build_type }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}
          ./immuno-endocrine-cpp-${{ matrix.os }}-${{ matrix.build_type }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}

      - name: Run binary (Windows)
        if: matrix.os == 'windows-latest'
        run: Start-Process -FilePath "immuno-endocrine-cpp-${{ matrix.os }}-${{ matrix.build_type }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}"

      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: immuno-endocrine-cpp-results-${{ matrix.os }}-${{ matrix.build_type }}
          path: ${{ github.workspace }}/output
